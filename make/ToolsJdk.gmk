#
# Copyright (c) 2011, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

include MakeIncludeStart.gmk
ifeq ($(INCLUDE), true)

################################################################################

include JavaCompilation.gmk

BUILDTOOLS_MODULES := \
    hotspot \
    java.base \
    java.desktop \
    jdk.compiler \
    jdk.internal.build \
    jdk.jdi \
    #


################################################################################
# To avoid reevaluating the compilation setup for the tools each time this file
# is included, the actual compilation is handled by CompileTools.gmk. The
# following trick is used to be able to declare a dependency on the built tools.
BUILD_TOOLS_JDK := $(foreach m, $(BUILDTOOLS_MODULES), \
    $(call SetupJavaCompilationCompileTarget, \
    BUILDTOOLS_$m, $(BUILDTOOLS_OUTPUTDIR)/$m/classes))

################################################################################

BuildTool = \
  $(JAVA_SMALL) -cp $(BUILDTOOLS_OUTPUTDIR)/$(strip $1)/classes \
      $(BUILDTOOL_OPTS_$(strip $1)_$(strip $2)) \
      jdk.internal.buildtools.$(1)
endef

BUILDTOOL_OPTS_java.desktop_compilefontconfig.CompileFontConfig := \
    --add-exports java.desktop/sun.awt=ALL-UNNAMED
TOOL_COMPILEFONTCONFIG := $(call BuildTool, java.desktop, compilefontconfig.CompileFontConfig)

TOOL_GENERATECHARACTER := $(call BuildTool, java.base, generatecharacter.GenerateCharacter)

TOOL_CHARACTERNAME := $(call BuildTool, java.base, generatecharacter.CharacterName)

BUILDTOOL_OPTS_java.desktop_dtdbuilder.DTDBuilder := \
    -Ddtd_home=$(TOPDIR)/src/java.desktop/share/data/dtdbuilder \
    -Djava.awt.headless=true
TOOL_DTDBUILDER := $(call BuildTool, java.desktop, dtdbuilder.DTDBuilder)

TOOL_GENERATEBREAKITERATORDATA := $(call BuildTool, java.base, generatebreakiteratordata.GenerateBreakIteratorData)

TOOL_GENERATECURRENCYDATA := $(call BuildTool, java.base, generatecurrencydata.GenerateCurrencyData)

TOOL_TZDB := $(call BuildTool, java.base, tzdb.TzdbZoneRulesCompiler)

BUILDTOOL_OPTS_java.base_blockedcertsconverter.BlockedCertsConverter := \
    --add-exports java.base/sun.security.util=ALL-UNNAMED
TOOL_BLOCKED_CERTS := $(call BuildTool, java.base, blockedcertsconverter.BlockedCertsConverter)

TOOL_MAKEJAVASECURITY := $(call BuildTool, java.base, makejavasecurity.MakeJavaSecurity)

BUILDTOOL_OPTS_java.base_generatecacerts.GenerateCacerts := \
    -Dkeystore.pkcs12.certProtectionAlgorithm=NONE \
    -Dkeystore.pkcs12.macAlgorithm=NONE
TOOL_GENERATECACERTS := $(call BuildTool, java.base, generatecacerts.GenerateCacerts)

TOOL_GENERATEEXTRAPROPERTIES := $(call BuildTool, java.base, generateextraproperties.GenerateExtraProperties)

TOOL_GENERATECASEFOLDING := $(call BuildTool, java.base, generatecharacter.CaseFolding)

TOOL_MAKEZIPREPRODUCIBLE := $(call BuildTool, jdk.internal.build, makezipreproducible.MakeZipReproducible)

TOOL_JDWPGEN := $(call BuildTool, jdk.jdi, jdwpgen.Main)

BUILDTOOL_OPTS_java.base_charsetmapping.Main := \
    $(LOG_INFO)
TOOL_CHARSETMAPPING := $(call BuildTool, jdk.internal.build, charsetmapping.Main)

TOOL_SPP := $(call BuildTool, java.base, spp.Spp)

TOOL_GENERATENIMBUS := $(call BuildTool, java.desktop, generatenimbus.Generator)

TOOL_WRAPPERGENERATOR := $(call BuildTool, java.desktop, x11wrappergen.WrapperGenerator)

BUILDTOOL_OPTS_java.desktop_icondata.awt.ToBin := \
    -Djava.awt.headless=true
TOOL_AWT_TOBIN := $(call BuildTool, java.desktop, icondata.awt.ToBin)

BUILDTOOL_OPTS_java.desktop_icondata.osxapp.ToBin := \
    -Djava.awt.headless=true
TOOL_OSX_TOBIN := $(call BuildTool, java.desktop, icondata.osxapp.ToBin)

TOOL_CLDRCONVERTER := $(call BuildTool, jdk.internal.build, cldrconverter.CLDRConverter)

TOOL_INTPOLY := $(call BuildTool, java.base, intpoly.FieldGen)

TOOL_GENERATELSREQUIVMAPS := $(call BuildTool, java.base, generatelsrequivmaps.EquivMapsGenerator)

TOOL_GENMODULEINFOSOURCE := $(call BuildTool, jdk.internal.build, module.GenModuleInfoSource)

TOOL_GENCLASSLOADERMAP := $(call BuildTool, jdk.internal.build, module.GenModuleLoaderMap)

TOOL_PUBLICSUFFIXLIST := $(call BuildTool, java.base, publicsuffixlist.GeneratePublicSuffixList)

TOOL_FIXUPPANDOC := $(call BuildTool, jdk.internal.build, fixuppandoc.Main)

TOOL_VARHANDLEGUARDMETHODGENERATOR = $(JAVA_SMALL) -cp $(BUILDTOOLS_OUTPUTDIR)/jdk_tools_classes \
    build.tools.methodhandle.VarHandleGuardMethodGenerator

################################################################################

# Executable javascript filter for man page generation using pandoc.

PANDOC_TROFF_MANPAGE_FILTER := $(BUILDTOOLS_OUTPUTDIR)/manpages/pandoc-troff-manpage-filter
PANDOC_HTML_MANPAGE_FILTER := $(BUILDTOOLS_OUTPUTDIR)/manpages/pandoc-html-manpage-filter

################################################################################

endif # include guard
include MakeIncludeEnd.gmk
